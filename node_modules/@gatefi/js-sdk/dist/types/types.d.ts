export declare enum GateFiDisplayModeEnum {
    Overlay = "overlay",
    Embedded = "embedded"
}
export declare enum GateFiEventTypes {
    onLoad = "onLoad",
    onInit = "onInit",
    onClose = "onClose",
    onSetThemeType = "onSetThemeType",
    _onRedirect = "onRedirect"
}
export declare type GateFiThemeType = "dark" | "light";
declare type TCurrencyAmount = {
    currency: string;
    amount?: string;
};
export declare type TGateFiStylesScheme = {
    type: GateFiThemeType;
    primaryBackground?: string;
    secondaryBackground?: string;
    primaryColor?: string;
    secondaryColor?: string;
    primaryTextColor?: string;
};
export declare type TGateFiConfiguration = {
    merchantId: string;
    displayMode: GateFiDisplayModeEnum;
    walletLock?: boolean;
    fiatAmountLock?: boolean;
    cryptoAmountLock?: boolean;
    fiatCurrencyLock?: boolean;
    cryptoCurrencyLock?: boolean;
    isSandbox?: boolean;
    hideThemeSwitcher?: boolean;
    nodeSelector?: string;
    walletAddress?: string;
    email?: string;
    defaultFiat?: TCurrencyAmount;
    defaultCrypto?: TCurrencyAmount;
    availableCrypto?: Array<string>;
    availableFiat?: Array<string>;
    styles?: TGateFiStylesScheme;
    isPlaidMode?: boolean;
    successUrl?: string;
    declineUrl?: string;
    cancelUrl?: string;
    externalId?: string;
    hideAsset?: boolean;
    assetConfirmation?: string;
    networkConfirmation?: string;
    walletConfirmation?: string;
};
export declare type TEventCallback = (type: GateFiEventTypes, payload: any) => void;
export {};
//# sourceMappingURL=types.d.ts.map